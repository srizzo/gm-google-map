/*! gm-google-map - v0.0.13 - 2017-07-02
* https://github.com/srizzo/gm-google-map
* Copyright (c) 2017 Samuel Rizzo; Licensed MIT */
angular.module("gm-google-map",[]).directive("gmMapContext",function(){return{scope:!0,restrict:"EA",controller:["$scope",function(a){var b;a.$setMap=function(a){b=a},a.$getMap=function(){return b}}]}}).directive("gmMapCanvas",function(){return{scope:!0,restrict:"EA",require:"^?gmMapContext",link:{pre:function(a,b,c){var d=!1,e=[{featureType:"poi",elementType:"all",stylers:[{visibility:"off"}]}];c.disableDefaultUi&&(d=a.$eval(c.disableDefaultUi)),c.styles&&(e=a.$eval(c.styles));var f=new google.maps.Map(b[0],{mapTypeId:google.maps.MapTypeId.ROADMAP,disableDefaultUI:d,styles:e});a.$setMap||(a.$setMap=function(a){f=a},a.$getMap=function(){return f}),a.$setMap(f),c.zoom&&a.$watch(c.zoom,function(a){f.setZoom(a)}),c.center&&a.$watch(c.center,function(a){null!=a&&f.setCenter(new google.maps.LatLng(a.lat,a.lng))},!0),a.safeApply=function(b){var c=a.$root.$$phase;"$apply"==c||"$digest"==c?b&&"function"==typeof b&&b():a.$apply(b)},angular.forEach(a.$eval(c.listeners),function(b,c){google.maps.event.addListener(f,c,function(){a.safeApply(function(){b()})})}),angular.forEach(a.$eval(c.listenersOnce),function(b,c){google.maps.event.addListenerOnce(f,c,function(){a.safeApply(function(){b()})})})}}}}).directive("gmAddOns",function(){return{scope:!0,restrict:"EA",compile:function(a){a.css("display","none")}}}).directive("gmControl",function(){return{scope:!0,compile:function(a,b){return void 0===b.visible&&(b.visible="true"),{pre:function(a,b,c){var d=b[0],e=a.$getMap(),f=c.position||"LEFT_TOP";a.$hide=function(){var a=e.controls[google.maps.ControlPosition[f]].indexOf(d);a>-1&&e.controls[google.maps.ControlPosition[f]].removeAt(a)},a.$show=function(){e.controls[google.maps.ControlPosition[f]].indexOf(d)<0&&e.controls[google.maps.ControlPosition[f]].push(d)},c.visible&&a.$watch(c.visible,function(b){!0===b?a.$show():a.$hide()})}}}}}).directive("gmInfoWindow",function(){return{scope:!0,compile:function(){return{pre:function(a,b,c){var d=b[0],e=new google.maps.InfoWindow;e.setContent(d),c.closeclick&&e.addListener("closeclick",function(){a.$apply(function(){a.$eval(c.closeclick)})}),a.$openInfoWindow=function(){e.open(a.$getMap(),a.$getMarker())},a.$closeInfoWindow=function(){e.close()}}}}}}).directive("gmOverlappingMarkerSpiderfier",function(){return{restrict:"AE",scope:!0,compile:function(){return{pre:function(a,b){b.css("display","none");var c=new OverlappingMarkerSpiderfier(a.$getMap(),{keepSpiderfied:!0});a.$getOverlappingMarkerSpiderfier=function(){return c},a.$on("gm_marker_created",function(a,b){c.addMarker(b)}),a.$on("gm_marker_destroyed",function(a,b){c.removeMarker(b)}),c.addListener("click",function(b,c){a.$apply(function(){google.maps.event.trigger(b,"gm_oms_click",c)})})}}}}}).directive("gmMarker",function(){return{restrict:"AE",scope:!0,compile:function(){return{pre:function(a,b,c){var d=new google.maps.Marker({map:a.$getMap(),data:a.$eval(c.data),title:a.$eval(c.title),optimized:a.$eval(c.optimized),position:new google.maps.LatLng(a.$eval(c.position).lat,a.$eval(c.position).lng)});if(a.$getMarker=function(){return d},c.position)var e=a.$watch(c.position,function(a){d.setPosition(new google.maps.LatLng(a.lat,a.lng))});if(c.icon)var f=a.$watch(c.icon,function(a){d.setIcon(a)});a.$emit("gm_marker_created",d),a.$on("$destroy",function(){e(),f(),d.setMap(null),a.$emit("gm_marker_destroyed",d)}),a.safeApply=function(b){var c=a.$root.$$phase;"$apply"==c||"$digest"==c?b&&"function"==typeof b&&b():a.$apply(b)},angular.forEach(a.$eval(c.listeners),function(b,c){google.maps.event.addListener(d,c,function(){a.safeApply(function(){b()})})}),angular.forEach(a.$eval(c.listenersOnce),function(b,c){google.maps.event.addListenerOnce(d,c,function(){a.safeApply(function(){b()})})})}}}}}).directive("gmPolyline",function(){return{restrict:"AE",scope:!0,compile:function(){return{pre:function(a,b,c){var d=new google.maps.Polyline({map:a.$getMap(),data:a.$eval(c.data),path:a.$eval(c.path),geodesic:a.$eval(c.geodesic),strokeColor:a.$eval(c.strokeColor),strokeOpacity:a.$eval(c.strokeOpacity),strokeWeight:a.$eval(c.strokeWeight)});if(a.$getPolyline=function(){return d},c.icon)var e=a.$watch(c.icon,function(a){d.setIcon(a)});a.$emit("gm_polyline_created",d),a.$on("$destroy",function(){e(),d.setMap(null),a.$emit("gm_polyline_destroyed",d)}),a.safeApply=function(b){var c=a.$root.$$phase;"$apply"==c||"$digest"==c?b&&"function"==typeof b&&b():a.$apply(b)},angular.forEach(a.$eval(c.listeners),function(b,c){google.maps.event.addListener(d,c,function(){a.safeApply(function(){b()})})}),angular.forEach(a.$eval(c.listenersOnce),function(b,c){google.maps.event.addListenerOnce(d,c,function(){a.safeApply(function(){b()})})})}}}}}).directive("gmAddListeners",function(){return{scope:!0,restrict:"EA",link:{pre:function(a,b,c){a.safeApply=function(b){var c=a.$root.$$phase;"$apply"==c||"$digest"==c?b&&"function"==typeof b&&b():a.$apply(b)};var d=a.$eval(c.to);angular.forEach(a.$eval(c.listeners),function(b,c){google.maps.event.addListener(d,c,function(){a.safeApply(function(){a.$eval(b)})})}),angular.forEach(a.$eval(c.listenersOnce),function(b,c){google.maps.event.addListenerOnce(d,c,function(){a.safeApply(function(){a.$eval(b)})})})}}}});